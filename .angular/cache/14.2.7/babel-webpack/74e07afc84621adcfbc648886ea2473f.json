{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/estmo/Desktop/Documents/1.Programmation/1.Intech/1.CPME/CPME-FRONT/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@src/services/apis/auth.service\";\nimport * as i2 from \"@src/services/apis/users.service\";\nexport class AppComponent {\n  //\n  // ---------\n  // Constructor\n  // ---------\n  //\n  constructor(authService, usersService) {\n    this.authService = authService;\n    this.usersService = usersService; //\n    // ---------\n    // Constructor\n    // ---------\n    //\n\n    this.auth = false; //\n    // ---------\n    // Form\n    // ---------\n    //\n\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  } //\n  // ---------\n  // OnInit\n  // ---------\n  //\n\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.checkToken();\n    })();\n  } //\n  // ---------\n  // Event when user click on login button\n  // ---------\n  //\n\n\n  onSubmit() {\n    if (!this.loginForm.valid) return;\n    this.usersService.getUserByName(this.loginForm.value.username).subscribe({\n      next: res => {\n        if (res == null) {\n          alert('Utilisateur ou mot de passe incorrect.');\n          return;\n        }\n\n        this.userAuth();\n      },\n      error: err => {\n        console.log(err);\n      },\n      complete: () => {}\n    });\n    console.log('this.loginForm.value');\n  } //\n  // ---------\n  // Authenticated user after login\n  // ---------\n  //\n\n\n  userAuth() {\n    this.authService.login(this.loginForm.value).subscribe({\n      next: res => {\n        // save token in local storage\n        localStorage.setItem('token', res.accessToken);\n        console.log(res);\n      },\n      error: err => {\n        alert('Utilisateur ou mot de passe incorrect.');\n      },\n      complete: () => {\n        this.auth = true;\n      }\n    });\n  } //\n  // ---------\n  // Check if user is authenticated\n  // ---------\n  //\n\n\n  checkToken() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.authService.checkToken().subscribe({\n        next: res => {\n          console.log(res);\n          _this2.auth = true;\n        },\n        error: err => {\n          console.log(err);\n        },\n        complete: () => {}\n      });\n    })();\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UsersService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 0,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LnNjc3MifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,gBAAnD;;;;AASA,OAAM,MAAOC,YAAP,CAAmB;EASxB;EACA;EACA;EACA;EACA;EACAC,YAAoBC,WAApB,EAAsDC,YAAtD,EAAgF;IAA5D;IAAkC,iCAA0B,CAbhF;IACA;IACA;IACA;IACA;;IAEA,YAAgB,KAAhB,CAOgF,CAEhF;IACA;IACA;IACA;IACA;;IAEA,iBAAY,IAAIL,SAAJ,CAAc;MACzBM,QAAQ,EAAE,IAAIP,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACM,QAAZ,CAApB,CADe;MAEzBC,QAAQ,EAAE,IAAIT,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACM,QAAZ,EAAsBN,UAAU,CAACQ,SAAX,CAAqB,CAArB,CAAtB,CAApB;IAFe,CAAd,CAAZ;EARoF,CAd5D,CA2BxB;EACA;EACA;EACA;EACA;;;EAEMC,QAAQ;IAAA;;IAAA;MACb,MAAM,KAAI,CAACC,UAAL,EAAN;IADa;EAEb,CAnCuB,CAqCxB;EACA;EACA;EACA;EACA;;;EAEAC,QAAQ;IACP,IAAI,CAAC,KAAKC,SAAL,CAAeC,KAApB,EAA2B;IAE3B,KAAKT,YAAL,CAAkBU,aAAlB,CAAgC,KAAKF,SAAL,CAAeG,KAAf,CAAqBV,QAArD,EAAgEW,SAAhE,CAA0E;MACzEC,IAAI,EAAGC,GAAD,IAAQ;QACb,IAAIA,GAAG,IAAI,IAAX,EAAiB;UAChBC,KAAK,CAAC,wCAAD,CAAL;UACA;QACA;;QAED,KAAKC,QAAL;MACA,CARwE;MAUzEC,KAAK,EAAGC,GAAD,IAAQ;QACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACA,CAZwE;MAczEG,QAAQ,EAAE,MAAK,CAAG;IAduD,CAA1E;IAiBAF,OAAO,CAACC,GAAR,CAAY,sBAAZ;EACA,CAhEuB,CAkExB;EACA;EACA;EACA;EACA;;;EAEAJ,QAAQ;IACP,KAAKjB,WAAL,CAAiBuB,KAAjB,CAAuB,KAAKd,SAAL,CAAeG,KAAtC,EAA6CC,SAA7C,CAAuD;MACtDC,IAAI,EAAGC,GAAD,IAAQ;QACb;QACAS,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,GAAG,CAACW,WAAlC;QACAN,OAAO,CAACC,GAAR,CAAYN,GAAZ;MACA,CALqD;MAOtDG,KAAK,EAAGC,GAAD,IAAQ;QACdH,KAAK,CAAC,wCAAD,CAAL;MACA,CATqD;MAWtDM,QAAQ,EAAE,MAAK;QACd,KAAKK,IAAL,GAAY,IAAZ;MACA;IAbqD,CAAvD;EAeA,CAxFuB,CA0FxB;EACA;EACA;EACA;EACA;;;EAEMpB,UAAU;IAAA;;IAAA;MACf,MAAI,CAACP,WAAL,CAAiBO,UAAjB,GAA8BM,SAA9B,CAAwC;QACvCC,IAAI,EAAGC,GAAD,IAAQ;UACbK,OAAO,CAACC,GAAR,CAAYN,GAAZ;UACA,MAAI,CAACY,IAAL,GAAY,IAAZ;QACA,CAJsC;QAMvCT,KAAK,EAAGC,GAAD,IAAQ;UACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACA,CARsC;QAUvCG,QAAQ,EAAE,MAAK,CAAG;MAVqB,CAAxC;IADe;EAaf;;AA7GuB;;;mBAAZxB,cAAY8B;AAAA;;;QAAZ9B;EAAY+B;EAAAC;EAAAC;EAAAC;EAAAC","names":["FormControl","FormGroup","Validators","AppComponent","constructor","authService","usersService","username","required","password","minLength","ngOnInit","checkToken","onSubmit","loginForm","valid","getUserByName","value","subscribe","next","res","alert","userAuth","error","err","console","log","complete","login","localStorage","setItem","accessToken","auth","i0","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\estmo\\Desktop\\Documents\\1.Programmation\\1.Intech\\1.CPME\\CPME-FRONT\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '@src/services/apis/auth.service';\nimport { UsersService } from '@src/services/apis/users.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n\t//\n\t// ---------\n\t// Constructor\n\t// ---------\n\t//\n\n\tauth: boolean = false;\n\n\t//\n\t// ---------\n\t// Constructor\n\t// ---------\n\t//\n\tconstructor(private authService: AuthService, private usersService: UsersService) {}\n\n\t//\n\t// ---------\n\t// Form\n\t// ---------\n\t//\n\n\tloginForm = new FormGroup({\n\t\tusername: new FormControl('', [Validators.required]),\n\t\tpassword: new FormControl('', [Validators.required, Validators.minLength(6)]),\n\t});\n\n\t//\n\t// ---------\n\t// OnInit\n\t// ---------\n\t//\n\n\tasync ngOnInit() {\n\t\tawait this.checkToken();\n\t}\n\n\t//\n\t// ---------\n\t// Event when user click on login button\n\t// ---------\n\t//\n\n\tonSubmit() {\n\t\tif (!this.loginForm.valid) return;\n\n\t\tthis.usersService.getUserByName(this.loginForm.value.username!).subscribe({\n\t\t\tnext: (res) => {\n\t\t\t\tif (res == null) {\n\t\t\t\t\talert('Utilisateur ou mot de passe incorrect.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.userAuth();\n\t\t\t},\n\n\t\t\terror: (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t},\n\n\t\t\tcomplete: () => {},\n\t\t});\n\n\t\tconsole.log('this.loginForm.value');\n\t}\n\n\t//\n\t// ---------\n\t// Authenticated user after login\n\t// ---------\n\t//\n\n\tuserAuth() {\n\t\tthis.authService.login(this.loginForm.value).subscribe({\n\t\t\tnext: (res) => {\n\t\t\t\t// save token in local storage\n\t\t\t\tlocalStorage.setItem('token', res.accessToken);\n\t\t\t\tconsole.log(res);\n\t\t\t},\n\n\t\t\terror: (err) => {\n\t\t\t\talert('Utilisateur ou mot de passe incorrect.');\n\t\t\t},\n\n\t\t\tcomplete: () => {\n\t\t\t\tthis.auth = true;\n\t\t\t},\n\t\t});\n\t}\n\n\t//\n\t// ---------\n\t// Check if user is authenticated\n\t// ---------\n\t//\n\n\tasync checkToken() {\n\t\tthis.authService.checkToken().subscribe({\n\t\t\tnext: (res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tthis.auth = true;\n\t\t\t},\n\n\t\t\terror: (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t},\n\n\t\t\tcomplete: () => {},\n\t\t});\n\t}\n}\n\n// this.authService.login(this.loginForm.value).subscribe((res) => {\n// \tconsole.log(res);\n// });\n"]},"metadata":{},"sourceType":"module"}